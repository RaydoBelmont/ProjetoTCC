generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int             @id @default(autoincrement())
  nome       String
  email      String          @unique
  workspaces WorkspaceUser[]
  chamados   ChamadoUser[]  
  notificacoes Notificacao[]
}

model Workspace {
  id       Int             @id @default(autoincrement())
  nome     String
  clientes Clientes[]
  users    WorkspaceUser[]
  setores   Setor[]
}

model WorkspaceUser {
  userId      Int
  workspaceId Int
  isAdmin     Boolean
  isCriador   Boolean @default(false)
  user        User      @relation(fields: [userId], references: [id])
  workspace   Workspace @relation(fields: [workspaceId], references: [id])

  @@id([userId, workspaceId])
}

model Clientes {
  id          Int        @id @default(autoincrement())
  nome        String     
  razao       String?
  cpfCnpj     String
  iE          String?
  email       String?
  observacao  String?
  ativo       Boolean @default(true)
  workspaceId Int
  workspace   Workspace  @relation(fields: [workspaceId], references: [id])
  contatos    Contatos[]
  chamados    Chamado[]
  endereco Endereco?
}

model Endereco {
  id          Int        @id @default(autoincrement())
  rua         String
  numero      String
  cep         String
  bairro      String
  cidade      String
  uf          String
  cliente Clientes @relation(fields: [clienteId], references: [id])
  clienteId Int @unique
}

model Contatos {
  id        Int      @id @default(autoincrement())
  telefone  String
  clienteId Int
  cliente   Clientes @relation(fields: [clienteId], references: [id])
}

model Chamado {
  id              Int            @id @default(autoincrement())
  titulo          String
  descricao       String
  criadoEm        DateTime        @default(now())
  atualizadoEm    DateTime        @updatedAt
  statusId        Int
  prioridadeId    Int
  criadoPor       Int
  clienteId       Int
  quadroId        Int
  workspaceId     Int             // ID da workspace relacionada
  numeroSequencial Int            // Sequencial do chamado dentro da workspace
  cliente         Clientes        @relation(fields: [clienteId], references: [id])
  quadro          Quadro          @relation(fields: [quadroId], references: [id])
  users           ChamadoUser[]
  status          Status          @relation(fields: [statusId], references: [id])
  prioridade      Prioridade          @relation(fields: [prioridadeId], references: [id])

  @@unique([workspaceId, numeroSequencial]) // Garantir que o número sequencial seja único por workspace
}

model ChamadoUser {
  userId       Int
  chamadoId    Int
  user         User              @relation(fields: [userId], references: [id])
  chamado      Chamado           @relation(fields: [chamadoId], references: [id])

  @@id([userId, chamadoId])
}

model Setor {
  id          Int       @id @default(autoincrement())
  nome        String
  workspaceId Int
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  quadros     Quadro[]
  status      Status[]
  prioridade Prioridade[]
}

model Status {
  id          Int       @id @default(autoincrement())
  nome        String
  setorId     Int       
  setor       Setor     @relation(fields: [setorId], references: [id])
  Chamado     Chamado[]
}

model Prioridade {
  id          Int       @id @default(autoincrement())
  nome        String
  setorId     Int       
  setor       Setor     @relation(fields: [setorId], references: [id])
  Chamado     Chamado[]
}

model Quadro {
  id          Int       @id @default(autoincrement())
  nome        String
  setorId     Int
  setor       Setor     @relation(fields: [setorId], references: [id])
  chamados    Chamado[]
}


model Notificacao {
  id            Int       @id @default(autoincrement())
  userId        Int
  tipo          String
  mensagem      String
  workspaceId   Int?      // Pode ser opcional, dependendo do tipo da notificação
  aceito        Boolean @default(false)
  dataCriacao   DateTime  @default(now())
  dataExpira    DateTime?  
  lido          Boolean   @default(false)
  arquivado     Boolean @default(false)
  user          User      @relation(fields: [userId], references: [id])

  @@index([userId])
}
